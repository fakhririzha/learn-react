{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","useState","title","console","log","amount","onClick","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a4eec2f.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n\tconst classes = \"card \" + props.className;\r\n\treturn <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n\tconst filterHandler = (event) => {\r\n\t\tprops.onChangeFilter(event.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"expenses-filter\">\r\n\t\t\t<div className=\"expenses-filter__control\">\r\n\t\t\t\t<label>Filter berdasarkan tahun</label>\r\n\t\t\t\t<select value={props.selected} onChange={filterHandler}>\r\n\t\t\t\t\t<option value=\"2022\">2022</option>\r\n\t\t\t\t\t<option value=\"2021\">2021</option>\r\n\t\t\t\t\t<option value=\"2020\">2020</option>\r\n\t\t\t\t\t<option value=\"2019\">2019</option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n\tconst month = props.date.toLocaleString(\"id-ID\", { month: \"long\" });\r\n\tconst day = props.date.toLocaleString(\"id-ID\", { day: \"2-digit\" });\r\n\tconst year = props.date.getFullYear();\r\n\r\n\treturn (\r\n\t\t<div className=\"expense-date\">\r\n\t\t\t<div className=\"expense-date__month\">{month}</div>\r\n\t\t\t<div className=\"expense-date__year\">{year}</div>\r\n\t\t\t<div className=\"expense-date__day\">{day}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import { useState } from \"react\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n\tconst [title, setTitle] = useState(props.title);\r\n\tconsole.log(\"ExpenseItem evaluated by React\");\r\n\r\n\tconst clickHandler = () => {\r\n\t\t// setTitle(\"Updated!\");\r\n\t\t// console.log(title);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<li>\r\n\t\t\t<Card className=\"expense-item\">\r\n\t\t\t\t<ExpenseDate date={props.date} />\r\n\t\t\t\t<div className=\"expense-item__description\">\r\n\t\t\t\t\t<h2>{props.title}</h2>\r\n\t\t\t\t\t<div className=\"expense-item__price\">Rp. {props.amount}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button onClick={clickHandler}>Ubah Judul</button>\r\n\t\t\t</Card>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import \"./ExpensesList.css\";\r\n\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpensesList = (props) => {\r\n\tif (props.items.length === 0) {\r\n\t\treturn <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ul className=\"expenses-list\">\r\n\t\t\t{props.items.map((expense) => (\r\n\t\t\t\t<ExpenseItem\r\n\t\t\t\t\tkey={expense.id}\r\n\t\t\t\t\ttitle={expense.title}\r\n\t\t\t\t\tamount={expense.amount}\r\n\t\t\t\t\tdate={expense.date}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default ExpensesList;\r\n","import \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n\tlet barFillHeight = \"0%\";\r\n\r\n\tif (props.maxValue > 0) {\r\n\t\tbarFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"chart-bar\">\r\n\t\t\t<div className=\"chart-bar__inner\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"chart-bar__fill\"\r\n\t\t\t\t\tstyle={{ height: barFillHeight }}\r\n\t\t\t\t></div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"chart-bar__label\">{props.label}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ChartBar;\r\n","import \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n\tconst dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n\tconst totalMaximum = Math.max(...dataPointValues);\r\n\treturn (\r\n\t\t<div className=\"chart\">\r\n\t\t\t{props.dataPoints.map((dataPoint) => (\r\n\t\t\t\t<ChartBar\r\n\t\t\t\t\tkey={dataPoint.label}\r\n\t\t\t\t\tlabel={dataPoint.label}\r\n\t\t\t\t\tvalue={dataPoint.value}\r\n\t\t\t\t\tmaxValue={totalMaximum}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n\tconst chartDataPoints = [\r\n\t\t{ label: \"Jan\", value: 0 },\r\n\t\t{ label: \"Feb\", value: 0 },\r\n\t\t{ label: \"Mar\", value: 0 },\r\n\t\t{ label: \"Apr\", value: 0 },\r\n\t\t{ label: \"Mei\", value: 0 },\r\n\t\t{ label: \"Jun\", value: 0 },\r\n\t\t{ label: \"Jul\", value: 0 },\r\n\t\t{ label: \"Agu\", value: 0 },\r\n\t\t{ label: \"Sep\", value: 0 },\r\n\t\t{ label: \"Okt\", value: 0 },\r\n\t\t{ label: \"Nov\", value: 0 },\r\n\t\t{ label: \"Des\", value: 0 },\r\n\t];\r\n\r\n\tfor (const expense of props.expenses) {\r\n\t\tconst expenseMonth = expense.date.getMonth(); // Januari = 0, Desember = 11\r\n\t\tchartDataPoints[expenseMonth].value += expense.amount;\r\n\t}\r\n\treturn <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import { useState } from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport \"./Expenses.css\";\r\n\r\nconst Expenses = (props) => {\r\n\tconst [filteredYear, setFilteredYear] = useState(\"2021\");\r\n\tconst filterChangeHandler = (selectedYear) => {\r\n\t\tsetFilteredYear(selectedYear);\r\n\t};\r\n\r\n\tconst filteredExpenses = props.items.filter((expense) => {\r\n\t\treturn expense.date.getFullYear().toString() === filteredYear;\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Card className=\"expenses\">\r\n\t\t\t\t<ExpensesFilter\r\n\t\t\t\t\tselected={filteredYear}\r\n\t\t\t\t\tonChangeFilter={filterChangeHandler}\r\n\t\t\t\t/>\r\n\t\t\t\t<ExpensesChart expenses={filteredExpenses} />\r\n\t\t\t\t<ExpensesList items={filteredExpenses} />\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n\tconst [enteredTitle, setEnteredTitle] = useState(\"\");\r\n\tconst [enteredAmount, setEnteredAmount] = useState(\"\");\r\n\tconst [enteredDate, setEnteredDate] = useState(\"\");\r\n\t// const [newExpenseAction, setNewExpenseAction] = useState(\"\");\r\n\r\n\tconst titleChangeHandler = (event) => {\r\n\t\tsetEnteredTitle(event.target.value);\r\n\t};\r\n\r\n\tconst amountChangeHandler = (event) => {\r\n\t\tsetEnteredAmount(event.target.value);\r\n\t};\r\n\tconst dateChangeHandler = (event) => {\r\n\t\tsetEnteredDate(event.target.value);\r\n\t};\r\n\r\n\t// const newExpenseButtonHandler = () => {\r\n\t// \tsetNewExpenseAction(\"Clicked\");\r\n\t// };\r\n\r\n\t// const newExpenseCancelButtonHandler = () => {\r\n\t// \tsetNewExpenseAction(\"\");\r\n\t// };\r\n\r\n\tconst submitHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst expenseData = {\r\n\t\t\ttitle: enteredTitle,\r\n\t\t\tamount: +enteredAmount,\r\n\t\t\tdate: new Date(enteredDate),\r\n\t\t};\r\n\r\n\t\tprops.onSaveExpenseData(expenseData);\r\n\r\n\t\tsetEnteredTitle(\"\");\r\n\t\tsetEnteredAmount(\"\");\r\n\t\tsetEnteredDate(\"\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={submitHandler}>\r\n\t\t\t<div className=\"new-expense__controls\">\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<label>Judul</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={enteredTitle}\r\n\t\t\t\t\t\tonChange={titleChangeHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<label>Biaya</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tvalue={enteredAmount}\r\n\t\t\t\t\t\tmin=\"1000\"\r\n\t\t\t\t\t\tstep=\"1000\"\r\n\t\t\t\t\t\tonChange={amountChangeHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<label>Tanggal</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\tvalue={enteredDate}\r\n\t\t\t\t\t\tmin=\"2020-01-01\"\r\n\t\t\t\t\t\tmax=\"2023-01-01\"\r\n\t\t\t\t\t\tonChange={dateChangeHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"new-expense__actions\">\r\n\t\t\t\t<button type=\"button\" onClick={props.onCancel}>\r\n\t\t\t\t\tBatal\r\n\t\t\t\t</button>\r\n\t\t\t\t<button type=\"submit\">Tambah Pengeluaran</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import { useState } from \"react\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n\tconst [isEditing, setIsEditing] = useState(false);\r\n\r\n\tconst saveExpenseDataHandler = (enteredExpenseData) => {\r\n\t\tconst expenseData = {\r\n\t\t\tid: Math.random().toString(),\r\n\t\t\t...enteredExpenseData,\r\n\t\t};\r\n\r\n\t\tprops.onAddExpense(expenseData);\r\n\t\tsetIsEditing(false);\r\n\t};\r\n\r\n\tconst startEditingHandler = () => {\r\n\t\tsetIsEditing(true);\r\n\t};\r\n\r\n\tconst stopEditingHandler = () => {\r\n\t\tsetIsEditing(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"new-expense\">\r\n\t\t\t{!isEditing && (\r\n\t\t\t\t<button onClick={startEditingHandler}>Tambah Pengeluaran Baru</button>\r\n\t\t\t)}\r\n\t\t\t{isEditing && (\r\n\t\t\t\t<ExpenseForm\r\n\t\t\t\t\tonSaveExpenseData={saveExpenseDataHandler}\r\n\t\t\t\t\tonCancel={stopEditingHandler}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n\t{\n\t\tid: \"e1\",\n\t\ttitle: \"Asuransi Mobil\",\n\t\tamount: 250000,\n\t\tdate: new Date(2021, 2, 28),\n\t},\n\t{\n\t\tid: \"e2\",\n\t\ttitle: \"TV Baru\",\n\t\tamount: 4799000,\n\t\tdate: new Date(2021, 2, 27),\n\t},\n\t{\n\t\tid: \"e3\",\n\t\ttitle: \"Iuran BPJS\",\n\t\tamount: 150000,\n\t\tdate: new Date(2021, 2, 26),\n\t},\n\t{\n\t\tid: \"e4\",\n\t\ttitle: \"Listrik\",\n\t\tamount: 375895,\n\t\tdate: new Date(2021, 2, 25),\n\t},\n];\n\nconst App = () => {\n\tconst [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n\tconst addExpenseHandler = (expense) => {\n\t\tsetExpenses((prevExpenses) => {\n\t\t\treturn [expense, ...prevExpenses];\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<NewExpense onAddExpense={addExpenseHandler} />\n\t\t\t<Expenses items={expenses} />\n\t\t</div>\n\t);\n};\nexport default App;\n","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}